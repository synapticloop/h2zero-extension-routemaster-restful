#
# All lines that start with the '#' symbol will be ignored.
#

#
# These are the current options that are available, namely the location of the
# 404, and 500 error pages
#
option.error.500=/error/500.html
option.error.404=/error/404.html

#
# What index files are registered - these are the files which will be search for
# in the requested directory if no specific file is requested
#
option.indexfiles=index.html,index.htm

#
# If you wish to define a route, start the property name with a 'route.' and it
# will be bound to the defined path.
#
# routes __must__ extend
#     synapticloop.nanohttpd.router.Routable

route./*=synapticloop.nanohttpd.servant.ClasspathFileServant

# This route will list all of the handlers
route./handlers/=synapticloop.nanohttpd.example.servant.HandlerServant

#
# If you wish to define a restful route, start the property name with a 'rest.'
# and it will be bound to the defined path and pass through any defined
# parameters as a hashmap
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.RestRoutable

rest./rest/%method%/=synapticloop.nanohttpd.example.servant.RouteMasterRestServant

# This is a simple rest servant that shows the various http methods being called
# with mapped and unmapped parameters.  Any parameters that form part of the
# uri after the /%mapped%/ mapping will be passed through wholly as a string
# of 'unmapped'
#
# e.g.:
#  public Response doGet(File rootDir, IHTTPSession httpSession, HashMap<String, String> restParams, String unmappedParams)
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.RestRoutable

rest./simple/%mapped%/=synapticloop.nanohttpd.example.servant.SimpleRestServant

# This is a simple rest servant that lists the mimetypes that are registered
# with no mapped or unmapped parameters.  Any parameters that form part of the
# uri after the /%mapped%/ mapping will be passed through wholly as a string
# of 'unmapped', however they will not be picked up.
#
# e.g.:
#  public Response doGet(File rootDir, IHTTPSession httpSession, HashMap<String, String> restParams, String unmappedParams)
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.RestRoutable

rest./mimetypes/=synapticloop.nanohttpd.example.servant.MimeTypesRestServant

# This is a simple route servant that lists the modules that are registered
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.Routable

route./modules/=synapticloop.nanohttpd.example.servant.ModulesRouteServant


# routemaster properties for restful routes
# This is the rest routable servant for the 'UserType' database table
rest./extension/user_type/%idUserType%/=synapticloop.sample.h2zero.sqlite3.routemaster.servant.UserTypeServant
}# This is the rest routable servant for the 'UserTitle' database table
rest./extension/user_title/%idUserTitle%/=synapticloop.sample.h2zero.sqlite3.routemaster.servant.UserTitleServant
}# This is the rest routable servant for the 'User' database table
rest./extension/user/%idUser%/=synapticloop.sample.h2zero.sqlite3.routemaster.servant.UserServant
}# This is the rest routable servant for the 'Pet' database table
rest./extension/pet/%idPet%/=synapticloop.sample.h2zero.sqlite3.routemaster.servant.PetServant
}# This is the rest routable servant for the 'UserPet' database table
rest./extension/user_pet/%idUserPet%/=synapticloop.sample.h2zero.sqlite3.routemaster.servant.UserPetServant
}