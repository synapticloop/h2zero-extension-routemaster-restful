package synapticloop.h2zero.extension.routemaster.servant;

//- - - - thoughtfully generated by synapticloop h2zero - - - - 
//with the use of synapticloop templar templating language
//        (java-create-routemaster-rest-servant.templar)

import java.io.File;
import java.sql.SQLException;

import java.util.List;
import java.util.Map;

import fi.iki.elonen.NanoHTTPD.IHTTPSession;
import fi.iki.elonen.NanoHTTPD.Response;
import synapticloop.nanohttpd.router.RestRoutable;
import synapticloop.nanohttpd.utils.HttpUtils;
import synapticloop.sample.h2zero.sqlite3.finder.PetFinder;
import synapticloop.sample.h2zero.sqlite3.model.Pet;

public class TestServant extends RestRoutable {

	public TestServant(String routeContext, List<String> params) {
		super(routeContext, params);
	}

	@Override
	public Response doGet(File rootDir, IHTTPSession httpSession, Map<String, String> restParams, String unmappedParams) {
		List<Pet> findAll;
		try {
			findAll = PetFinder.findAll();
		} catch (SQLException ex) {
			return(HttpUtils.internalServerErrorResponse(ex.getMessage()));
		}
		StringBuilder stringBuilder = new StringBuilder("[");
		boolean first = true;
		for (Pet pet : findAll) {
			if(!first) {
				stringBuilder.append(",");
			}
			stringBuilder.append(pet.toJsonString());
			first = false;
		}
		stringBuilder.append("]");
		return(HttpUtils.okResponse("application/json", stringBuilder.toString()));
	}

	@Override
	public Response doPost(File rootDir, IHTTPSession httpSession, Map<String, String> restParams, String unmappedParams) {
		return super.doPost(rootDir, httpSession, restParams, unmappedParams);
	}

	@Override
	public Response doPut(File rootDir, IHTTPSession httpSession, Map<String, String> restParams, String unmappedParams) {
		return super.doPut(rootDir, httpSession, restParams, unmappedParams);
	}

	@Override
	public Response doDelete(File rootDir, IHTTPSession httpSession, Map<String, String> restParams, String unmappedParams) {
		return super.doDelete(rootDir, httpSession, restParams, unmappedParams);
	}

}
